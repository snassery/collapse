<?php
// we use MODULENAME_form_FORMID_alter to restrict it to the specific form
// this helps reduce processing time, as Drupal will ignore this on any other forms
function collapse_form_user_profile_form_alter(&$form, &$form_state, $form_id)
{
    // can't hurt to double-check that we're on the right form
    if ($form_id == "user_profile_form")
    {
         // Note that the ID of the fieldset is "picture" not "edit-picture" like
         // the fieldset's HTML ID - you may have to guess-and-check to find it.
         // Usueally you remove the "edit-" part of the HTML ID, and replace any
         // spaces with underscores, i.e. "edit-signature-settings"
         // becomes "signature_sttings"
         // Only these two lines are needed if the fieldset you are trying 
         // to collapse is not collapsible by default, such as the user picture.
         $form['picture']['#collapsible'] = true;
         $form['picture']['#collapsed'] = true;

         // A third line is needed if the fieldset you are trying to collapse
         // is collapsible, but is uncollapsed by default - for example, the timezone.
         // Note that depending on the fieldset, this third line MAY OR MAY NOT
         // be needed! Start without it, and if the fieldset isn't collapsing,
         // add the third line to force the addition of the 'collapsed' class.
         $form['timezone']['#collapsible'] = true;
         $form['timezone']['#collapsed'] = true;
         $form['timezone']['#attributes']['class'][] = 'collapsed';

         // Implement an "after_build" to put these changes into the form.
         // The array is just which function you are telling it to run.
        $form['#after_build'] = array('collapse_fieldsets');

         // Test to make sure module and hook_form_alter is working 
         // and the page hasn't been cached - very easy to check if the 
         // main form's class has been updated each time you refresh.
         // Just change the version number each time you upload this .module file.
        $form['#attributes']['class'][] = 'version-5';
    }
}

/** implement timezone */
function block_date_timezone_user($op, &$edit, &$account, $category = NULL) {
  if (isset($account->uid) && $op == 'login' && variable_get('configurable_timezones', 1)) {
    if (strlen($account->timezone_name)) {
      $date = date_now($account->timezone_name);
      $offset = date_offset_get($date);
      if ($offset != $account->timezone) {
        $account->timezone = $offset;
        db_query("UPDATE {users} SET timezone='%s' WHERE uid = %d", $offset, $account->uid);
      }
    }
    else {
      // If the user doesn't already have a timezone name selected,
      // default it to the site timezone name and offset.
      $timezone = variable_get('date_default_timezone_name', NULL);
      if (!empty($timezone)) {
        $date = date_now($timezone);
        $offset = date_offset_get($date);
        db_query("UPDATE {users} SET timezone_name = '%s', timezone='%s' WHERE uid = %d", $timezone, $offset, $account->uid);
      }
    }
  }
  return $timezone;
}


/** implement login */



function block_user($type, &$edit, &$user, $category = NULL) {
  switch ($type) {
    case 'view':
      $items['Last Login'] = array(
        'title' => t('Last login'),
        'value' => format_date($user->login,'small'), 
        'timezone' => format_timezone($user->timezone_name, 'small'),
        'class' => 'mymodule', 
          
      );      
      return array(t('History') => $items);
      break;
}
}


// this function renders the form content
function collapse_fieldsets($form_element, &$form_state) 
{
        // Note that this is the same as above, but with $form_element instead of $form.
        // Everything you put in the above code must be duplicated here.
        $form_element['picture']['#collapsible'] = true;
        $form_element['picture']['#collapsed'] = true;

        $form_element['timezone']['#collapsible'] = true;
        $form_element['timezone']['#collapsed'] = true;
        $form_element['timezone']['#attributes']['class'][] = 'collapsed';

        return $form_element;
}